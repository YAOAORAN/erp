<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cxs.sys.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.cxs.sys.domain.Role">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="available" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, remark, available
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_role
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.cxs.sys.domain.Role">
    insert into sys_role (name, remark,
      available)
    values ( #{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
      #{available,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.cxs.sys.domain.Role">
        insert into sys_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="available != null">
                available,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="available != null">
                #{available,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.cxs.sys.domain.Role">
        update sys_role
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="available != null">
                available = #{available,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cxs.sys.domain.Role">
    update sys_role
    set name = #{name,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      available = #{available,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="queryAllRole" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_role
        <where>
            <if test="name!=null and name!=''">
                and name like concat("%",#{name},"%")
            </if>
            <if test="remark!=null and remark!=''">
                and remark like concat("%",#{remark},"%")
            </if>
            <if test="available!=null">
                and available = #{available}
            </if>
        </where>
    </select>

    <!--根据rid删除对应的权限-->
    <delete id="deletePermissionByRid">
            delete from sys_role_permission where rid=#{value}
        </delete>
    <!--角色的权限-->
    <insert id="addRolePermissionByPid">
        insert into sys_role_permission(rid,pid) values(#{param1},#{param2})
    </insert>
    <!--根据uid删除对应的权限-->
    <delete id="deleteRoleByUserId">
        delete from sys_role_user where uid=#{value}
    </delete>

    <select id="queryRoleByUserId" resultMap="BaseResultMap">
        select t1.* from sys_role t1 INNER join sys_role_user t2 on (t1.id=t2.rid) where t2.uid=#{value}
    </select>

</mapper>